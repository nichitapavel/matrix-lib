/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
}

group 'es.ull.hpcg'
version '0.6'

ext.GitHubPackagesClosure = {
    name = 'GitHubPackages'
    url = uri('https://maven.pkg.github.com/HPC-ULL/SBCs-EnergyEfficiency')
    credentials {
        username = project.findProperty('gpr.user')
        password = project.findProperty('gpr.key')
    }
}

// helper function to return a "curried" closure
Closure GitHubPackages() {
    return GitHubPackagesClosure.curry()
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenLocal()
    maven GitHubPackages()
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

publishing {
    repositories {
        maven GitHubPackages()
    }
    publications {
        gpr(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

jar {
    manifest {
        attributes(
                'Implementation-Title': project.name,
                'Implementation-Group': project.group,
                'Implementation-Version': project.version
        )
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(buildRelease)) {
        compileJava.options.debug = false
    } else if (taskGraph.hasTask(buildDebug)) {
        compileJava.options.debug = true
        project.version = version + '-debug'
    } else if (taskGraph.hasTask(assembleRelease)) {
        compileJava.options.debug = false
    } else if (taskGraph.hasTask(assembleDebug)) {
        compileJava.options.debug = true
        project.version = version + '-debug'
    }
}

// https://docs.gradle.org/current/dsl/org.gradle.api.tasks.testing.Test.html
// Overwrite test task
// Add system properties to remove nashorn warning
// and level down mockserver logs
// there is one thing i don't understand
// WHY THERE IS A gradle.properties FILE IF IT DOESN'T CHANGE THE SYSTEM PROPERTIESÂ¿?
// https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_configuration_properties
test {
    systemProperty 'nashorn.args', '--no-deprecation-warning'
    systemProperty 'mockserver.logLevel', 'WARN'
}

task buildRelease(type: GradleBuild, dependsOn: build) {}
task buildDebug(type: GradleBuild, dependsOn: build) {}

task assembleRelease(type: GradleBuild, dependsOn: assemble) {}
task assembleDebug(type: GradleBuild, dependsOn: assemble) {}

dependencies {
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mock-server:mockserver-junit-rule:5.11.1'
    // https://www.mock-server.com/mock_server/debugging_issues.html#logging_with_api
    implementation 'org.slf4j:slf4j-simple:1.7.30'
}
