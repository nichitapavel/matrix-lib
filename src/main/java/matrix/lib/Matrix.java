/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package matrix.lib;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.Random;


public class Matrix {
    private final List<Integer> array;
    private final int size;
    private final int dimension;

    public Matrix(int size) {
        this.size = size;
        this.dimension = size * size;
        this.array = new ArrayList<Integer>(this.dimension);
    }

    public void set(int[] array_data) throws Exception {
        if (array_data.length != this.dimension)
            throw new Exception("Matrix dimension and array length does not match.");
        for (int item : array_data)
            if (this.array != null) {
                this.array.add(item);
            }
    }

    public void fill(int module, TimeController time) {
        int i;
        time.snapStart();
        for (i = 0; i < this.dimension; i++) {
            this.array.add(
                    // FIXED TODO this does not work in Android v4.4.4, API level 19
                    new Random().nextInt(module)
            );
        }
        time.snapFinish();
    }

    public Matrix multiply(Matrix matrix, TimeController time) {
        int i, j, k;
        Matrix matrix_computed = new Matrix(this.size);

        time.snapStart();
        for (i = 0; i < this.size; i++) {
            for (j = 0; j < this.size; j++) {
                int result = 0;
                for (k = 0; k < this.size; k++) {
                    result += (int) this.array.get(i*this.size+k) * (int) matrix.array.get(k*this.size+j);
                }
                matrix_computed.array.add(result);
            }
        }
        time.snapFinish();

        return matrix_computed;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Matrix matrix = (Matrix) o;
        return array.equals(matrix.array);
    }

    @Override
    public int hashCode() {
        return Objects.hash(array);
    }

    @Override
    public String toString() {
        int i, j;
        StringBuilder message = new StringBuilder();

        if (this.array.size() == 0) {
            return "Matrix empty.";
        }

        for (i = 0; i < this.size; i++) {
            for (j = 0; j < this.size; j++)
                message.append(this.array.get(i * this.size + j)).append("\t");
            message.append("\n");
        }

        return message.toString();
    }
}

